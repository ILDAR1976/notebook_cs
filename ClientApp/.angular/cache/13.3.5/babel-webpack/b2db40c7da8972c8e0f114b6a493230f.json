{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { User } from '../secret/model/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.url = \"http://localhost:8080/base/rest/admin/users\";\n      this.sourceUrl = \"http://localhost:8080/base\";\n    }\n\n    isAuth() {\n      if (this.token != null) {\n        return this.token.length > 0 ? true : false;\n      } else {\n        return false;\n      }\n    }\n\n    setToken(response) {\n      if (response) {\n        const res = JSON.parse(response);\n        console.log(\"Result: \" + res.token);\n        localStorage.setItem('accessToken', res.token);\n        console.log(\"In storage: \" + localStorage.getItem('accessToken'));\n      } else {\n        localStorage.clear();\n      }\n    }\n\n    get token() {\n      return localStorage.getItem('accessToken');\n    }\n\n    login(user) {\n      let new_user = new User(0, \"\", user.username, user.password);\n      let header = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n      return this.httpClient.post(this.sourceUrl + \"/api/auth/login\", JSON.stringify(new_user), {\n        headers: header,\n        responseType: 'text'\n      }).pipe(tap(this.setToken));\n    }\n\n    createUser(user) {\n      const myHeaders = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n      return this.httpClient.post(this.sourceUrl + \"/user/register\", JSON.stringify(user), {\n        headers: myHeaders\n      });\n    }\n\n    whoami() {\n      return this.httpClient.post(this.sourceUrl + \"/user/whoami\", \"\", {\n        responseType: 'text'\n      });\n    }\n\n    logout() {\n      const myHeaders = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n      this.setToken(null);\n      return this.httpClient.post(this.sourceUrl + \"/api/auth/logout\", \"\", {\n        headers: myHeaders,\n        responseType: 'text'\n      });\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}