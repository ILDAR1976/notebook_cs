{"ast":null,"code":"import { Record } from '../../model/record';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../service/record.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../fragments/header/header.component\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../fragments/footer/footer.component\";\nimport * as i7 from \"../../service/filter.pipe\";\nconst _c0 = [\"readOnlyTemplate\"];\nconst _c1 = [\"editTemplate\"];\n\nfunction RecordComponent_tr_23_ng_template_1_Template(rf, ctx) {}\n\nconst _c2 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction RecordComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, RecordComponent_tr_23_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const record_r5 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadTemplate(record_r5))(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c2, record_r5));\n  }\n}\n\nfunction RecordComponent_ng_template_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"input\", 10);\n    i0.ɵɵlistener(\"click\", function RecordComponent_ng_template_28_Template_input_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const record_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.editRecord(record_r7);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"td\")(10, \"input\", 11);\n    i0.ɵɵlistener(\"click\", function RecordComponent_ng_template_28_Template_input_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const record_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.deleteRecord(record_r7);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const record_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(record_r7.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(4, 3, record_r7.dateTime, \"dd.MM.yyyy HH:mm:ss\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r7.description);\n  }\n}\n\nfunction RecordComponent_ng_template_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordComponent_ng_template_30_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.editedRecord.id = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵelement(3, \"input\", 13);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function RecordComponent_ng_template_30_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.editedRecord.description = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\")(8, \"input\", 15);\n    i0.ɵɵlistener(\"click\", function RecordComponent_ng_template_30_Template_input_click_8_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.saveRecord();\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"td\")(10, \"input\", 16);\n    i0.ɵɵlistener(\"click\", function RecordComponent_ng_template_30_Template_input_click_10_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.cancel();\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.editedRecord.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind2(4, 3, ctx_r4.editedRecord.dateTime, \"dd.MM.yyyy HH:mm:ss\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.editedRecord.description);\n  }\n}\n\nexport let RecordComponent = /*#__PURE__*/(() => {\n  class RecordComponent {\n    constructor(router, service, datepipe) {\n      this.router = router;\n      this.service = service;\n      this.datepipe = datepipe;\n      this.readOnlyTemplate = null;\n      this.editTemplate = null;\n      this.searchText = '';\n      this.isNewRecord = false;\n      this.statusMessage = \"\";\n      this.records = new Array();\n      let currentDate = new Date();\n      this.timeZoneOffset = currentDate.getTimezoneOffset();\n      this.editedRecord = new Record(0, currentDate, \"\");\n    }\n\n    ngOnInit() {\n      this.loadRecords();\n    }\n\n    createNewRecord() {\n      let currentDate = new Date();\n      this.editedRecord = new Record(0, currentDate, \"\");\n    } // Load records\n\n\n    loadRecords() {\n      this.service.getRecord().subscribe(data => {\n        this.records = new Array();\n\n        for (let index = 0; index < data.length; index++) {\n          const element = data[index];\n          let a1 = new Date(element.dateTime).toString().replace('Z', '').concat('Z');\n          let a2 = new Date(a1);\n          var newRecord = new Record(element.id, a2, element.description);\n          this.records.push(newRecord);\n        } // The sorted records\n\n\n        this.records.sort((a, b) => {\n          // The compare function\n          if ((a.id != null ? a.id : 0) < (b.id != null ? b.id : 0)) {\n            return -1;\n          }\n\n          if (a.id != null) {\n            return 1;\n          }\n\n          return 0;\n        });\n      });\n    } // Add user\n\n\n    addRecord() {\n      this.createNewRecord();\n\n      if (this.records.length != 0) {\n        let user = this.records.reduce((a, b) => (a.id != null ? a.id : 0) > (b.id != null ? b.id : 0) ? a : b);\n\n        if (user != null) {\n          let id = user.id != null ? user.id + 1 : 100000;\n          this.editedRecord.id = id;\n        }\n      }\n\n      this.records.push(this.editedRecord);\n      this.isNewRecord = true;\n    } // Editing a notebook entry\n\n\n    editRecord(record) {\n      this.editedRecord.id = record.id;\n      this.editedRecord.dateTime = record.dateTime;\n      this.editedRecord.description = record.description;\n    } // Load one of the two templates\n\n\n    loadTemplate(record) {\n      if (this.editedRecord && this.editedRecord.id === record.id) {\n        return this.editTemplate;\n      } else {\n        return this.readOnlyTemplate;\n      }\n    } // Saving notes in the notebook\n\n\n    saveRecord() {\n      if (this.isNewRecord) {\n        // Add record\n        this.service.createRecord(this.editedRecord).subscribe(data => {\n          this.statusMessage = 'Данные успешно добавлены', this.loadRecords();\n        });\n        this.isNewRecord = false;\n        this.createNewRecord();\n      } else {\n        // Update record\n        this.service.updateRecord(this.editedRecord).subscribe(data => {\n          this.statusMessage = 'Данные успешно обновлены', this.loadRecords();\n        });\n        this.createNewRecord();\n      }\n    } // unediting\n\n\n    cancel() {\n      // if canceled on addition, delete the last entry\n      if (this.isNewRecord) {\n        this.records.pop();\n        this.isNewRecord = false;\n      }\n\n      this.createNewRecord();\n    } // Delete record\n\n\n    deleteRecord(user) {\n      this.service.deleteRecord(user.id).subscribe(data => {\n        this.statusMessage = 'Данные успешно удалены', this.loadRecords();\n      });\n    }\n\n    logout() {\n      this.service.logout();\n      this.router.navigate(['login']);\n    }\n\n    currentDatetimeToString(inputDatetime) {\n      //this.datepipe.transform(inputDatetime, 'dd.MM.yyyy hh:mm')\n\n      /*  let date = new Date(inputDatetime);\r\n       return ((date.getDay() < 10 ? '0' + date.getDay() : date.getDay()) + '.' +\r\n               ((date.getMonth() + 1) < 10 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1)) +  '.' +\r\n               date.getFullYear() + ' ' + date.toLocaleTimeString('ru-RU')); */\n      return \"Дата\";\n    }\n\n  }\n\n  RecordComponent.ɵfac = function RecordComponent_Factory(t) {\n    return new (t || RecordComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.RecordService), i0.ɵɵdirectiveInject(i3.DatePipe));\n  };\n\n  RecordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecordComponent,\n    selectors: [[\"app-record\"]],\n    viewQuery: function RecordComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.readOnlyTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editTemplate = _t.first);\n      }\n    },\n    decls: 32,\n    vars: 7,\n    consts: [[1, \"card-title\"], [\"id\", \"job\", 1, \"table\", \"table-striped\"], [\"type\", \"button\", \"value\", \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [2, \"align-content\", \"right\", \"width\", \"35%\"], [\"type\", \"search\", \"placeholder\", \"\\u041F\\u043E\\u0438\\u0441\\u043A\", \"aria-label\", \"\\u041F\\u043E\\u0438\\u0441\\u043A\", 1, \"form-control\", \"mr-sm-2\", 2, \"margin-right\", \"auto\", 3, \"ngModel\", \"ngModelChange\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"readOnlyTemplate\", \"\"], [\"editTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"type\", \"button\", \"value\", \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", \"value\", \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"type\", \"number\", \"readonly\", \"\", \"disabled\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"readonly\", \"\", \"disabled\", \"\", 1, \"form-control\", 3, \"value\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"value\", \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", \"value\", \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\", 1, \"btn\", \"btn-warning\", 3, \"click\"]],\n    template: function RecordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\")(1, \"hr\");\n        i0.ɵɵelementStart(2, \"h1\", 0);\n        i0.ɵɵtext(3, \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0438 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"table\", 1)(5, \"thead\")(6, \"tr\")(7, \"td\")(8, \"input\", 2);\n        i0.ɵɵlistener(\"click\", function RecordComponent_Template_input_click_8_listener() {\n          return ctx.addRecord();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"td\", 3)(10, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RecordComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.searchText = $event;\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(11, \"table\", 5)(12, \"thead\")(13, \"tr\")(14, \"td\");\n        i0.ɵɵtext(15, \"\\u0418\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0438\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"td\");\n        i0.ɵɵtext(17, \"\\u0412\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u0430\\u044F \\u043C\\u0435\\u0442\\u043A\\u0430 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0438\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"td\");\n        i0.ɵɵtext(19, \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"td\")(21, \"td\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"tbody\");\n        i0.ɵɵtemplate(23, RecordComponent_tr_23_Template, 2, 4, \"tr\", 6);\n        i0.ɵɵpipe(24, \"filter\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"div\");\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"app-footer\");\n        i0.ɵɵtemplate(28, RecordComponent_ng_template_28_Template, 11, 6, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(30, RecordComponent_ng_template_30_Template, 11, 6, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(24, 3, ctx.records, \"description\", ctx.searchText));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.statusMessage);\n      }\n    },\n    directives: [i4.HeaderComponent, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i3.NgForOf, i3.NgTemplateOutlet, i6.FooterComponent, i5.NumberValueAccessor],\n    pipes: [i7.FilterPipe, i3.DatePipe],\n    styles: [\"#job[_ngcontent-%COMP%]{border-collapse:collapse}\"]\n  });\n  return RecordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}